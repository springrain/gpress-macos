name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
    # 手动触发

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  MacOS:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        include:
        - os: macos-11  ### X86 CPU
        - os: macos-latest ##M1 CPU
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: 
          submodules: recursive

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.22'  # 指定 Go 版本

      - name: Build project
        run: |
          go version  # 打印 Go 版本确认安装成功
          go build --tags "fts5" -ldflags "-w -s"  # 构建项目
          cd ./gpressdatadir && unzip dict.zip && rm -rf ./dict.zip && cd ..
          mkdir -p ./temp/gpress && mv ./gpress ./temp/gpress/ 

          if [ "${{ matrix.os }}" == "macos-11" ]; then
            mv ./gpressdatadir/fts5/libsimple.dylib-amd64 ./gpressdatadir/fts5/temp.dylib
            rm -rf ./gpressdatadir/fts5/libsimple*
            mv ./gpressdatadir/fts5/temp.dylib ./gpressdatadir/fts5/libsimple.dylib
          else
            mv ./gpressdatadir/fts5/libsimple.dylib ./gpressdatadir/fts5/temp.dylib
            rm -rf ./gpressdatadir/fts5/libsimple*
            mv ./gpressdatadir/fts5/temp.dylib ./gpressdatadir/fts5/libsimple.dylib
          fi
          mv ./gpressdatadir ./temp/gpress/
      - name: upload artifacts macos
        uses: actions/upload-artifact@v3
        with:
          name: gpress-${{ matrix.os }}
          path: ${{ github.workspace }}/temp
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  LinuxAARCH64:
    runs-on: ubuntu-arm64
    strategy:
      fail-fast: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: 
          submodules: recursive

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.22'  # 指定 Go 版本

      - name: Build project
        run: |
          go version  # 打印 Go 版本确认安装成功
          go build --tags "arm,fts5" -ldflags "-w -s"  # 构建项目
          cd ./gpressdatadir && unzip dict.zip && rm -rf ./dict.zip && cd ..
          mkdir -p ./temp/gpress && mv ./gpress ./temp/gpress/ 
        
          mv ./gpressdatadir/fts5/libsimple.so-aarch64 ./gpressdatadir/fts5/temp.so
          rm -rf ./gpressdatadir/fts5/libsimple*
          mv ./gpressdatadir/fts5/temp.so ./gpressdatadir/fts5/libsimple.so
         
          mv ./gpressdatadir ./temp/gpress/
      - name: upload artifacts macos
        uses: actions/upload-artifact@v3
        with:
          name: gpress-linux-aarch64
          path: ${{ github.workspace }}/temp
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

