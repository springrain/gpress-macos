name: CI

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}-${{ matrix.arch }}
    strategy:
      matrix:
        os: [osx, linux]
        arch: [arm64, x64]

      fail-fast: false
    steps:

      - name: Print OS
        run: | 
          echo "Operating System: ${{ runner.os }};CPU Architecture: $(uname -m);${{ runner.architecture }}"

      - name: Checkout
        uses: actions/checkout@v4
        with: 
          submodules: recursive

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.1'

      - name: Build project
        run: |
          go version
          go build --tags "fts5" -ldflags "-w -s"
          cd ./gpressdatadir && unzip dict.zip && rm -rf ./dict.zip && cd ..
          mkdir -p ./temp/gpress && mv ./gpress ./temp/gpress/ 

          if [ "${{ matrix.os }}" == "macos-latest" ]; then
            if [ "${{ matrix.arch }}" == "arm64" ]; then
              mv ./gpressdatadir/fts5/libsimple.dylib ./gpressdatadir/fts5/temp.dylib
            else
              mv ./gpressdatadir/fts5/libsimple.dylib-amd64 ./gpressdatadir/fts5/temp.dylib
            fi
            rm -rf ./gpressdatadir/fts5/libsimple*
            mv ./gpressdatadir/fts5/temp.dylib ./gpressdatadir/fts5/libsimple.dylib
          else
            if [ "${{ matrix.arch }}" == "arm64" ]; then
              mv ./gpressdatadir/fts5/libsimple.so-aarch64 ./gpressdatadir/fts5/temp.so
            else
              mv ./gpressdatadir/fts5/libsimple.so ./gpressdatadir/fts5/temp.so
            fi
            rm -rf ./gpressdatadir/fts5/libsimple*
            mv ./gpressdatadir/fts5/temp.so ./gpressdatadir/fts5/libsimple.so
          fi
          
          mv ./gpressdatadir ./temp/gpress/

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gpress-${{ matrix.os }}-${{ matrix.arch }}
          path: ${{ github.workspace }}/temp
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
