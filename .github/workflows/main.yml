name: CI

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Include amd64 on all platforms.
        goos: [windows, linux, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goarch: arm64
            goos: windows
      fail-fast: false
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}

    steps:

      - name: Print OS
        run: | 
          echo "Operating System: ${{ runner.os }};CPU Architecture: $(uname -m)"

      - name: Checkout
        uses: actions/checkout@v4
        with: 
          submodules: recursive

      - name: Build
        uses: crazy-max/ghaction-xgo@v3
        with:
          xgo_version: latest
          go_version: 1.22.1
          dest: build/gpress
          prefix: gpress
          targets: ${{matrix.goos}}/${{matrix.goarch}}
          v: true
          x: false
          race: false
          ldflags: -w -s
          tags: fts5
          buildmode: default
          trimpath: true
      - name: Rename executable file
        run: |
          cd ./build/gpress || exit 1
          mv gpress-$GOOS-$GOARCH* gpress

      - name: Rename Windows ecutable file 
        if: matrix.goos == 'windows'
        run: |
          cd ./build/gpress || exit 1
          mv gpress gpress.exe   

      - name: Build project
        run: |
          cd ./gpressdatadir && unzip dict.zip && rm -rf ./dict.zip && cd ..    
          
          if [ "${{ matrix.os }}" == "darwin" ]; then
            if [ "${{ matrix.arch }}" == "arm64" ]; then
              mv ./gpressdatadir/fts5/libsimple.dylib ./gpressdatadir/fts5/temp.dylib
            else
              mv ./gpressdatadir/fts5/libsimple.dylib-amd64 ./gpressdatadir/fts5/temp.dylib
            fi
            rm -rf ./gpressdatadir/fts5/libsimple*
            mv ./gpressdatadir/fts5/temp.dylib ./gpressdatadir/fts5/libsimple.dylib
          fi

          if [ "${{ matrix.os }}" == "linux" ]; then
            if [ "${{ matrix.arch }}" == "arm64" ]; then
              mv ./gpressdatadir/fts5/libsimple.so-aarch64 ./gpressdatadir/fts5/temp.so
            else
              mv ./gpressdatadir/fts5/libsimple.so ./gpressdatadir/fts5/temp.so
            fi
            rm -rf ./gpressdatadir/fts5/libsimple*
            mv ./gpressdatadir/fts5/temp.so ./gpressdatadir/fts5/libsimple.so
          fi

          if [ "${{ matrix.os }}" == "windows" ]; then
            mv ./gpressdatadir/fts5/libsimple.dll ./gpressdatadir/fts5/temp.dll
            rm -rf ./gpressdatadir/fts5/libsimple*
            mv ./gpressdatadir/fts5/temp.dll ./gpressdatadir/fts5/libsimple.dll
          fi          
          
          mv ./gpressdatadir ./build/gpress/

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gpress-${{matrix.goos}}-${{matrix.goarch}}
          path: ${{ github.workspace }}/build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
